public class CPBenchmarks extends java.lang.Object
{
/*CPBenchmarks.java*/

/*[Ljava.lang.String;@673d289c*/
    private final void error(java.lang.String)
    {
        CPBenchmarks this;
        java.lang.String message;

        this := @this: CPBenchmarks;
/*Source Line Pos Tag: sline: 13 eline: 14 spos: 2 epos: 2 file: CPBenchmarks.java*/

        message := @parameter0: java.lang.String;
/*Source Line Pos Tag: sline: 13 eline: 13 spos: 21 epos: 34 file: CPBenchmarks.java*/

        return;
/*Source Line Pos Tag: sline: 13 eline: 13 spos: 21 epos: 34 file: CPBenchmarks.java*/
    }

/*[Ljava.lang.String;@66fb23e3*/
    public void example1()
    {
        CPBenchmarks this;
        int temp$1, c, d;

        this := @this: CPBenchmarks;
/*Source Line Pos Tag: sline: 16 eline: 25 spos: 2 epos: 2 file: CPBenchmarks.java*/
/*V[0] = true // this := @this: CPBenchmarks*/
/*V[0] : true*/
/*V[1] = V[0] // this := @this: CPBenchmarks*/
/*V[1] : true*/

        temp$1 = 5 + 1;
/*Source Line Pos Tag: sline: 18 eline: 18 spos: 3 epos: 12 file: CPBenchmarks.java*/
/*V[2] = AssignExprToVarTransformer(V[1]) // temp$1 = 5 + 1*/
/*V[2] : temp$1=6*/

        c = temp$1 + 7;
/*Source Line Pos Tag: sline: 20 eline: 20 spos: 3 epos: 16 file: CPBenchmarks.java*/
/*V[3] = AssignExprToVarTransformer(V[2]) // c = temp$1 + 7*/
/*V[3] : and(temp$1=6, c=13)*/

        d = temp$1 + 7;
/*Source Line Pos Tag: sline: 21 eline: 21 spos: 3 epos: 16 file: CPBenchmarks.java*/
/*V[4] = AssignExprToVarTransformer(V[3]) // d = temp$1 + 7*/
/*V[4] : and(temp$1=6, c=13, d=13)*/

        goto label1;
/*Source Line Pos Tag: sline: 23 eline: 23 spos: 7 epos: 12 file: CPBenchmarks.java*/
/*V[5] = V[4] // goto [?= (branch)]*/
/*V[5] : and(temp$1=6, c=13, d=13)*/

     label1:
        if d != 13 goto label4;
/*Source Line Pos Tag: sline: 23 eline: 23 spos: 17 epos: 23 file: CPBenchmarks.java*/
/*V[7] = AssumeExprTransformer(V[5]) // assume !(d != 13)*/
/*V[7] : and(temp$1=6, c=13, d=13)*/
/*V[6] = AssumeExprTransformer(V[5]) // assume d != 13*/
/*V[6] : false*/

        goto label2;
/*Source Line Pos Tag: sline: 23 eline: 23 spos: 17 epos: 23 file: CPBenchmarks.java*/
/*V[8] = V[7] // goto [?= (branch)]*/
/*V[8] : and(temp$1=6, c=13, d=13)*/

     label2:
        if c != 13 goto label4;
/*Source Line Pos Tag: sline: 23 eline: 23 spos: 28 epos: 34 file: CPBenchmarks.java*/
/*V[9] = AssumeExprTransformer(V[8]) // assume c != 13*/
/*V[9] : false*/
/*V[10] = AssumeExprTransformer(V[8]) // assume !(c != 13)*/
/*V[10] : and(temp$1=6, c=13, d=13)*/

        goto label3;
/*Source Line Pos Tag: sline: 23 eline: 23 spos: 28 epos: 34 file: CPBenchmarks.java*/
/*V[11] = V[10] // goto [?= (branch)]*/
/*V[11] : and(temp$1=6, c=13, d=13)*/

     label3:
        if temp$1 != 6 goto label4;
/*Source Line Pos Tag: sline: 23 eline: 23 spos: 39 epos: 44 file: CPBenchmarks.java*/
/*V[12] = AssumeExprTransformer(V[11]) // assume temp$1 != 6*/
/*V[12] : false*/
/*V[13] = AssumeExprTransformer(V[11]) // assume !(temp$1 != 6)*/
/*V[13] : and(temp$1=6, c=13, d=13)*/

        goto label5;
/*Source Line Pos Tag: sline: 23 eline: 23 spos: 39 epos: 44 file: CPBenchmarks.java*/
/*V[14] = V[13] // goto [?= return]*/
/*V[14] : and(temp$1=6, c=13, d=13)*/

     label4:
        virtualinvoke this.<CPBenchmarks: void error(java.lang.String)>("Unable to prove b == 7 && d == 13 && c == 13 && a == 6!");
/*Source Line Pos Tag: sline: 24 eline: 24 spos: 4 epos: 67 file: CPBenchmarks.java*/
/*V[16] = MultiJoin_CPDomain(V[6], V[9], V[12]) // virtualinvoke this.<CPBenchmarks: void error(java.lang.String)>("Unable to prove b == 7 && d == 13 && c == 13 && a == 6!")*/
/*V[16] : false*/
/*V[15] = V[16] // virtualinvoke this.<CPBenchmarks: void error(java.lang.String)>("Unable to prove b == 7 && d == 13 && c == 13 && a == 6!")*/
/*V[15] : false*/

     label5:
        return;
/*Source Line Pos Tag: sline: 24 eline: 24 spos: 4 epos: 67 file: CPBenchmarks.java*/
/*V[17] = V[18] // return*/
/*V[17] : and(temp$1=6, c=13, d=13)*/
/*V[18] = Join_CPDomain(V[14], V[15]) // return*/
/*V[18] : and(temp$1=6, c=13, d=13)*/
    }

/*[Ljava.lang.String;@51ed53d2*/
/*11*/
    public void <init>()
    {
        CPBenchmarks this;

        this := @this: CPBenchmarks;
/*12*/

        specialinvoke this.<java.lang.Object: void <init>()>();
/*12*/

        return;
/*12*/
    }
}
